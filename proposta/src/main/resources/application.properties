spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:666/postgres}
spring.datasource.username=${DATASOURCE_USER:gustavo}
spring.datasource.password=${DATASOURCE_PSW:12345678}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.ddl-auto=update

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.data-source-properties.pool-name=postgres
spring.datasource.hikari.maximum-pool-size=10

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#actuator
management.endpoints.jmx.exposure.include=metrics,health,info
management.endpoints.web.exposure.include=health,info,metrics,prometheus 
management.endpoint.health.show-details=always
management.endpoint.actuator.template=true
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO}
management.metrics.tags.ambiente=${AMBIENTE}

#variaveis
cartoes.host=${CARTOES_URL:http://localhost:8888/api}
solicitacao.host=${SOLICITACAO_URL:http://localhost:9999/api}
time.assync=10000
spring.application.name= @project.artifactId@

opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Nome do serviço
opentracing.jaeger.service-name=ProposalsMicroservice
# Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}



spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}